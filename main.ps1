$ProgressPreference =  'Ignore'
# load functions in \libs\
foreach ($file in $(get-item -Path $PSScriptRoot\libs\*.ps1)) {
   . "$($file.versioninfo.filename)"
}

. $PSScriptRoot\data\telegramtoken.ps1

"tmp","data" | foreach-object {
    $dir = "{0}/{1}" -f $PSScriptRoot, $_ 
    if(-not (test-path $dir)){
        $null = new-item $dir -ItemType Directory
    }
}

$dbfile = "$PSScriptRoot/data/db.sqlite"

if(-not(Test-Path $dbfile)) {
    sqlite3 $dbfile 'CREATE TABLE IF NOT EXISTS CVES ( CVEID TEXT PRIMARY KEY, CreateDate TEXT NOT NULL, lastModifiedDate TEXT NOT NULL, Notified TEXT );'
    $NO_NOTIFICATIONS=$true
}
#region main
#CPE Matchliste
$cpeMatch = @('cpe:2.3:*:microsoft:exchange_server:2016*',
            'cpe:2.3:*:vmware:tools:*',
            'cpe:2.3:*:microsoft:exchange_server:2019*',
            'cpe:2.3:*:vmware:vcenter_server:*',
            'cpe:2.3:*:vmware:workstation:*',
            'cpe:2.3:*:vmware:esxi:*',
            'cpe:2.3:*:sophos:*',
            'cpe:2.3:*:arista:*',
            'cpe:2.3:*:debian:*',
            'cpe:2.3:*:citrix:*'
            'cpe:2.3:*:hitachi:*'
            'cpe:2.3:*:synology:*'
            'cpe:2.3:*:dell:fc630*'
)

#Download URL der CVE Daten im JSON/Zip Format
$nvdfile = 'https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2022.json.zip'
Invoke-WebRequest -uri $nvdfile -OutFile $PSScriptRoot\tmp\nvdcve-1.1-2022.json.zip

#ntpacken der Daten
Expand-Archive -Path $PSScriptRoot\tmp\nvdcve-1.1-2022.json.zip -DestinationPath $PSScriptRoot\tmp\ -force

#jsonfile einlesen als Powershell Object
$jsonfile = Get-Content $PSScriptRoot\tmp\nvdcve-1.1-2022.json | ConvertFrom-Json

#fuer jeden von uns gesuchten CPE String ...
$cpeMatch | ForEach-Object {
    $cpe = $_
    #durchsuchen wir das jsonfile/object nach entsprechenden treffern
    $jsonfile.CVE_Items | where-Object { $_.configurations.nodes.cpe_match.cpe23Uri -like "$($cpe)" } | ForEach-Object {
        #fuer jeden Treffer bauen wir uns ein Temporaeres Objekt zusammen.
        $tmpobj = [pscustomobject]@{
            cpe23Uri = $_.configurations.nodes.cpe_match[0].cpe23Uri
            CVEID = $_.cve.CVE_data_meta.ID
            Assigner = $_.cve.CVE_data_meta.assigner
            Status = $null
            PublishedDate = $_.publishedDate
            Description = $_.cve.description.description_data.value
            lastModifiedDate = $_.lastModifiedDate
            URL = $_.cve.references.reference_data[0].name
        }

        #existiert der cve schon?
        $query = "SELECT * FROM CVES WHERE CVEID = '{0}'" -f $tmpobj.CVEID
        $result = sqlite3 $dbfile $query
        if($result.count -eq 1) {
            $resultsplit = $result.split('|')
            $DBlastModifiedDate = $resultsplit[2]
            if($DBlastModifiedDate -ne $tmpobj.lastModifiedDate) {
                $tmpobj.Status = "Modified"
                Send-TelegramNotification($tmpobj)
            }
        } else {
            $tmpobj.Status = 'new'
            Send-TelegramNotification($tmpobj)
        }
        Export-CVENotificationData($tmpobj)
    }
}
#endregion
